# This is a basic workflow to help you get started with Actions

name: CI

permissions:
  contents: write
  pages: write

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-documentation:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Doxygen
        uses: mattnotmitt/doxygen-action@v1.2.1
        with:
          doxyfile-path: ./doxyfile
          working-directory: .
      - name: Copy Workshop Pages
        run: cp -r docs/workshop/ docs/html/
      - name: VIPRA Documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/html
          keep_files: true

  run-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: cpp-linter/cpp-linter-action@v2
      id: linter
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        style: 'file'  # Use .clang-format config file
        tidy-checks: '' # Use .clang-tidy config file
        # only 'update' a single comment in a pull request's thread.
        thread-comments: ${{ github.event_name == 'pull_request' && 'update' }}
    - name: Fail fast?!
      if: steps.linter.outputs.checks-failed > 0
      run: exit 1
  
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Dependencies
        run: sudo apt-get install -y mpich libmpich-dev
      - name: Run CMake
        run: cd __tests__ && cmake -B build -S .
      - name: Build
        run: cd __tests__ && cmake --build build
      - name: Run tests
        run: cd __tests__ && build/vipra_tests
